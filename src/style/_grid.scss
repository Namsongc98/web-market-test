@use "sass:math";
$grid-columns: 12;
$grid-gap: (
  "0": 0,
  "10": 10px,
  "12": 12px,
  "15":15px,
  "20": 20px,
  "30": 30px,
);

$layout-values: flex-start, flex-end, center, space-between, space-around;
$layout-aligns: stretch, center, flex-start, flex-end, baseline;
// grid gaps
@each $key, $val in $grid-gap {
  .gap-#{$key} > * {
    padding-left: $val;
  }
  .gap-#{$key} {
    margin-left: -$val;
  }
}

// justify

@each $val in $layout-values {
  .justify-#{$val} {
    justify-content: $val;
  }
}
// aligns
@each $val in $layout-aligns {
  .align-#{$val} {
    align-items: $val;
  }
}

@include sp {
  @for $i from 1 through $grid-columns {
    .col-sp-#{$i} {
      box-sizing: border-box;
      flex: 0, 0, math.div($i * 100%, $grid-columns);
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include pc {
  @for $i from 1 through $grid-columns {
    .col-pc-#{$i} {
      box-sizing: border-box;
      flex: 0, 0, math.div($i * 100%, $grid-columns);
      width: math.div($i * 100%, $grid-columns);
    }
  }
}
